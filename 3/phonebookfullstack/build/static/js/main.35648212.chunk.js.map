{"version":3,"sources":["components/Filter.js","components/Form.js","components/Communication.js","components/Person.js","App.js","index.js"],"names":["Filter","props","value","newFilter","onChange","handleFilter","Form","onSubmit","addPerson","newName","handleInput","newNumber","handleInputNumber","type","baseUrl","exportedObject","postPerson","newNote","axios","post","then","Response","data","getAll","get","deletePerson","id","delete","updatePerson","newObject","put","Entry","name","number","onClick","window","confirm","Communication","index","catch","error","setErrorMessage","setStatus","setTimeout","response","setPersons","Person","personsToShow","newState","persons","filter","person","includes","map","Notification","message","className","status","App","useState","setNewName","setNewNumber","setNewFilter","setNewState","errorMessage","useEffect","event","target","preventDefault","dude","find","Element","personData","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.35648212.chunk.js","sourcesContent":["const Filter = (props) => {\r\n    return (\r\n    <form>\r\n        <div>\r\n            filter shown with: <input\r\n            value={props.newFilter}\r\n            onChange={props.handleFilter}\r\n            />\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default Filter","const Form = (props) => {\r\n    return (\r\n    <form onSubmit={props.addPerson}>\r\n        <div>\r\n          name: <input\r\n          value={props.newName}\r\n          onChange={props.handleInput} />\r\n        </div>\r\n        <div>\r\n          number: <input\r\n          value={props.newNumber}\r\n          onChange={props.handleInputNumber} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default Form","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst postPerson = newNote => {\r\n    const request = axios.post(baseUrl, newNote)\r\n    return request.then(Response => Response.data)\r\n}\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(Response => Response.data)\r\n}\r\nconst deletePerson = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(Response => Response.data)\r\n}\r\nconst updatePerson = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(Response => Response.data)\r\n}\r\nconst exportedObject = {postPerson, getAll, deletePerson, updatePerson}\r\nexport default exportedObject","import Communication from './Communication'\r\nconst Entry = (props) => {\r\n    return (<p>{props.name} {props.number} <button onClick={() => {\r\n        if (window.confirm(`Delete ${props.name}`)) {\r\n            Communication.deletePerson(props.index)\r\n            .catch(error => {\r\n                props.setErrorMessage(`Information of ${props.name} has already been removed from server`)\r\n                props.setStatus(\"error\")\r\n                setTimeout(() => {\r\n                    props.setErrorMessage(null)\r\n                    props.setStatus(null)\r\n                }, 5000)\r\n            }).then(response => {\r\n                return Communication.getAll()\r\n            }).then(response => {\r\n                props.setPersons(response)\r\n              })\r\n        }\r\n    }}>delete</button></p> )\r\n  }\r\n\r\nconst Person = (props) => {\r\n    const personsToShow = props.newState\r\n    ? props.persons\r\n    : props.persons.filter(person => person.name.includes(props.newFilter) === true)\r\n\r\n    return (\r\n        <div>\r\n            {personsToShow.map((person) =>\r\n                <Entry key={person.id} name={person.name} number={person.number}\r\n                index={person.id} setPersons={props.setPersons}\r\n                setErrorMessage={props.setErrorMessage}\r\n                setStatus={props.setStatus}\r\n                />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Form from './components/Form'\nimport Person from './components/Person'\nimport Communication from './components/Communication'\nimport './index.css'\n\nconst Notification = (props) => {\n  if (props.message === null) {\n    return null\n  } else {\n    return (\n        <div className={props.status}>\n          {props.message}\n        </div>\n      )\n  }\n  \n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ newState, setNewState ] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [status, setStatus] = useState(null)\n\n  const addPerson = (event) =>{\n    event.preventDefault()\n    const exists = persons.map(person => person.name).includes(newName)\n    \n    if (exists) {\n      window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      const dude = persons.find(Element => Element.name === newName)\n      const personData = {\n        name: newName,\n        number: newNumber\n      }\n      Communication.updatePerson(dude.id, personData).then(Response => {\n        setPersons(persons.map(person => person.id !== dude.id ? person : Response))\n        setErrorMessage(`Added ${newName}`)\n        setStatus(\"succ\")\n        setTimeout(() => {\n          setErrorMessage(null)\n      }, 5000)\n      })\n      setNewName(\"\")\n      setNewNumber(\"\")\n    } else{\n      const personData = {\n        name: newName,\n        number: newNumber\n      }\n      Communication.postPerson(personData).then(Response => {\n        setPersons(persons.concat(Response))\n        setErrorMessage(`Added ${newName}`)\n        setStatus(\"succ\")\n        setTimeout(() => {\n          setErrorMessage(null)\n      }, 5000)\n      })\n      setNewName(\"\")\n      setNewNumber(\"\")\n    }\n\n  }\n  \n\n  const handleFilter = (event) => {\n    if (event.target.value === \"\") {\n      setNewState(true)\n    } else {\n      setNewState(false)\n    }\n    setNewFilter(event.target.value)\n  }\n\n  const handleInput = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleInputNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n  useEffect(() => {\n    Communication.getAll().then(response => {\n      setPersons(response)\n    })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} status={status}/>\n      <Filter\n      newFilter={newFilter}\n      handleFilter={handleFilter} \n      />\n      <h2>add a new</h2>\n      <Form \n      addPerson={addPerson}\n      newName={newName}\n      handleInput={handleInput}\n      newNumber={newNumber}\n      handleInputNumber={handleInputNumber}\n      />\n      <h2>Numbers</h2>\n      <Person \n      persons={persons}\n      newState={newState}\n      newFilter={newFilter}\n      setPersons={setPersons}\n      setErrorMessage={setErrorMessage}\n      setStatus={setStatus}\n      />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}